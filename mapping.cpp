#include <iostream>
#include <vector>
#include <fstream>
#include <cstdlib>
#include <sstream>

using namespace std;

int main(int argc, char* argv[])
{
    if (argc != 5) {
        cerr << "Usage: " << argv[0] << " <arg1:SAToutputfile> <arg2:graphfile> <arg3:mappingfile> <arg4:problem 1/2>" << endl;
        return 1;
    }
    string graph_file = argv[1];
    string SAT_outputfile = argv[2];
    string mapping_file = argv[3];
    string problem = argv[4];
    // read graph file to get vertices, edges, k1, k2
    fstream graph_ipfile;
    int v;
    int e;

    if (problem == "1") {

        int k1;
        int k2;
        graph_ipfile.open(graph_file, ios::in);
        graph_ipfile >> v;
        graph_ipfile >> e;
        graph_ipfile >> k1;
        graph_ipfile >> k2;
        graph_ipfile.close();

        // read SAT output file generated by miniSAT
        fstream ipfile;
        string sat;
        int var, x;
        stringstream G1;
        stringstream G2;
        ipfile.open(SAT_outputfile, ios::in);
        if (!ipfile) {
            cout << "No such file\n";
            exit( 0 );
        } else {
            ipfile >> sat;
            x = 1;
            int c1 = 1;
            int c2 = 1;
            if (sat=="SAT"){
                while (ipfile >> var && x<=2*v) {
                    if (x<=v){
                        if (var > 0 && c1<=k1){
                            c1++;
                            G1 << var << " ";
                        }
                    } else {
                        if (var > 0 && c2<=k2){
                            c2++;
                            G2 << var-v << " ";
                        }
                    }
                    x+=1;
                }
            }
            ipfile.close();
        }
        G1 << " \n";
        G2 << " \n";

        // write in mapping file
        ofstream mappingFile(mapping_file);
        if (!mappingFile.is_open()) {
            cerr << "Failed to open the file for writing." << endl;
            exit(0);
        }
        if (sat=="SAT"){
            mappingFile << "#1 \n";
            mappingFile << G1.str();
            mappingFile << "#2 \n";
            mappingFile << G2.str();
        } else {
            mappingFile << "0 \n";
        }
        
        mappingFile.close();
    
    } else if (problem == "2") {

        int k;
        graph_ipfile.open(graph_file, ios::in);
        graph_ipfile >> v;
        graph_ipfile >> e;
        graph_ipfile.close();
        fstream ipfile;
        string sat;
        int var, x;
        stringstream G;
        ipfile.open(SAT_outputfile, ios::in);
        if (!ipfile) {
            cout << "No such file\n";
            exit( 0 );
        } else {
            ipfile >> sat;
            x = 1;
            int c1 = 1;
            
            if (sat == "SAT") {
                while (ipfile >> var && x<=v) {
                    if (x<=v){
                        if (var > 0 && c1<=k){
                            c1++;
                            G << var << " ";
                        }
                    } else {
                        break;
                    }
                    x+=1;
                }
            } 
            ipfile.close();
            G << "\n";
            // write in mapping file
            ofstream mappingFile(mapping_file);
            if (!mappingFile.is_open()) {
                cerr << "Failed to open the file for writing." << endl;
                exit(0);
            }
            if (sat=="SAT"){
                mappingFile << "#1 \n";
                mappingFile << G.str();
            } else {
                mappingFile << "0 \n";
            }
            
            mappingFile.close();

        }

    }

    return 0;
}


